<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
    {{- $config := .config }}
    <dict>
        {{- range $key, $value := $config }}
            {{- if eq (printf "%T" $value) "<nil>"}}     <!-- Check if the value is nil -->
                {{- if strings.HasSuffix "_check" $key }}  <!-- Check if the key has "_check" suffix -->
                    {{$value = false }}                   <!-- Set the value to false -->
                {{- else if strings.HasSuffix "_text" $key }} <!-- Check if the key has "_text" suffix -->
                    {{$value = "" }}                      <!-- Set the value to an empty string -->
                {{- end }}
            {{- end }}
            {{- if hasPrefix $key "ios_branding" }}         <!-- Check if the key has a prefix "ios_branding" -->

            <key>{{ $key | strings.TrimPrefix "ios_" | strings.TrimSuffix "_check" | strings.TrimSuffix "_text" | strings.TrimSuffix "_color" }}</key> <!-- Remove prefixes and suffixes and create a key element -->
            {{- if eq (printf "%T" $value) "string"}} <!-- Check if the value is a string -->
                <string>{{$value}}</string>       <!-- Create a string element with the value -->
            {{- else if eq $value true }}         <!-- Check if the value is true -->
                <true/>                         <!-- Create a true element -->
            {{- else if eq $value false }}        <!-- Check if the value is false -->
                <false/>                        <!-- Create a false element -->
            {{end}}
            {{- end }}
            {{- if hasPrefix $key "ios_json_override_longtext" }} <!-- Check if the key has a prefix "ios_json_override_longtext" -->
               

                {{$value}} <!-- Output the value -->
            {{- end }}


            {{- end }}


Wenn "ios_branding.url-help_text" dann schreibe 	<key>branding.can-edit-account</key><false/>


## Settings

branding.url-privacy: reg-default: `https://owncloud.org/privacy-policy/` -> computed: `https://owncloud.org/privacy-policy/`
branding.send-feedback-address: reg-default: `ios-app@owncloud.com` -> computed: `ios-app@owncloud.com`
branding.url-terms-of-use: reg-default: `https://raw.githubusercontent.com/owncloud/ios-app/master/LICENSE` -> computed: `https://raw.githubusercontent.com/owncloud/ios-app/master/LICENSE`
branding.url-help: reg-default: `https://owncloud.com/docs-guides/` -> computed: `https://owncloud.com/docs-guides/`
branding.url-documentation: reg-default: `https://doc.owncloud.com/ios-app/latest/` -> computed: `https://doc.owncloud.com/ios-app/latest/`

## Account Setup + Management

branding.can-edit-account: reg-default: `1` -> computed: `1`
branding.can-add-account: reg-default: `1` -> computed: `1`
branding.profile-allow-url-configuration



        {{end}}
    </dict>
</plist>




## Syntax for defaults

{{ $data := .Data }}
{{ with index $data "myKey" }}
    {{/* Der Schlüssel "myKey" ist vorhanden */}}
{{ else }}
    {{/* Der Schlüssel "myKey" ist nicht vorhanden */}}
{{ end }}
